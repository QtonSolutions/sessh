# This pipeline builds Linux, macOS, and Windows executables.
# A Github release is created, the CHANGELOG.md rotated, and the QtonSolutions/homebrew-tap update with the new build.
# The build artifacts are not shared between the build machines so other actions are run on specific machines. These
# are commented in those parts of the pipeline definition.

# Only build tags
if: tag IS present

env:
  global:
    # Contains:
    # - GH_TOKEN: Personal access token required for publishing releases, making commits in other repos. Only public
    #             repo access required
    secure: FqxUxHMisFu5C7q41lAHU88P/7oX3F4I9zekMso/ppZ/WalUNe2dMscopeTNxC8tnmwPvCkCNmiEMTYEqxxh+hCWB/Rjrk6tIDcfEzWzkraMe4EFSWjVEjGY6vmRc/c+FZEi2Jl8azbc4MY7PeaoWuHXYC4tzL2MnCd6vZ35/au1Nf8z8XEg+z6fV+Gs9DTYmB3DGV/20RWga4cAS6IQvKH+aEggF+9RCekG1Ai0BdL04LE2eKZGIy4SsVd+GB4xPr7GB//5AZrtpvoqKuq2+cZH5FNxkJ2v55j1prplfcmj1orwuQuwJWX031fWalyJNapNZwJKiWtcHbkiCycsUc4zMBYIIXOKTQvudt/gOGTzCiGIJ9vgzafRqpNLHZ9WQ7YXJrxK8bM8QqNMsC7BznZwf8tV9JwAw4uHw/v541X2NG9znOk0+K+nhpmO9qyEaccnqx4UaiwXVw56JpMMZdUf/3Rk1kZJAGuAqRkPho3nc1QLzVVe+H5f3XlvUkd4MzmjdSS36Ce2+pUQcOIsvUdACG11rKJClC7Bpr6WQdneihbkczAO4l38jyOS6NFSjwPt8f8RDMvUFEGyclBTOt/x3sADreFZoXAnROlgHzlGvlQyWBTFnea/IamDLU03M3ljaslqSl4SW7K11FG7un71vntZi/FcSXloGIJ/GkY=

# Required to allow updating CHANGELOG.md after a build
git:
  depth: false

language: python
cache: pip
install:
  - pip3 install --upgrade pip
  - pip3 install -r requirements.txt

# 'python' points to Python 2.7 on macOS but points to Python 3.7 on Linux and Windows
# 'python3' is a 'command not found' error on Windows
script: python3 scripts/release.py ${TRAVIS_BRANCH} || python scripts/release.py ${TRAVIS_BRANCH}
matrix:
  include:
    - name: "Python 3 on Xenial Linux"
      python: 3.7
      before_deploy:
        # Compress the executable so it can be added to the Github release
        - gzip -c dist/sessh > dist/sessh-${TRAVIS_BRANCH}-${TRAVIS_OS_NAME}.gz
        # Create a release notes file with all the unreleased changes so it can be used for the Github release
        - python scripts/create_release_notes.py ./CHANGELOG.md ./release_notes.md
      deploy: &deploy_base
        provider: releases
        skip_cleanup: true
        # From env.global.secure
        api_key: ${GH_TOKEN}
        file_glob: true
        file: dist/sessh-*.gz
        draft: false
        # Use travis-ci/dpl for releases because it has more features
        edge: true
        name: ${TRAVIS_BRANCH}
        release_notes_file: "./release_notes.md"
        on:
          all_branches: false
          tags: true
      after_script:
        # Update the CHANGELOG.md to make all the [Unreleasd] notes part of this release and create a new [Unreleased]
        # section. This should only be done once per build so pick the Linux machine because it normally finishes first.
        - python scripts/create_next_release_in_changelog.py ./CHANGELOG.md ${TRAVIS_BRANCH}
    - name: "Python 3.7 on macOS"
      os: osx
      osx_image: xcode11
      language: shell
      # Compress the executable so it can be added to the Github release
      before_deploy: gzip -c dist/sessh > dist/sessh-${TRAVIS_BRANCH}-${TRAVIS_OS_NAME}.gz
      deploy:
        <<: *deploy_base
        # Use the regular (non travis-ci/dpl) release mechanism to avoid some strange errors.
        edge: false
      # Update the QtonSolutions/homebrew-tap sessh formula with the new build information.
      after_deploy: python3 scripts/publish_release_to_homebrew_tap.py "${TRAVIS_BRANCH}" "dist/sessh-${TRAVIS_BRANCH}-${TRAVIS_OS_NAME}.gz"
    - name: "Python 3.7 on Windows"
      os: windows
      language: shell
      before_install:
        - choco install python 7zip.portable
        - python -m pip install --upgrade pip
      # Compress the executable so it can be added to the Github release
      before_deploy: 7za.exe a -tzip dist/sessh-${TRAVIS_BRANCH}-${TRAVIS_OS_NAME}.zip dist/sessh.exe
      deploy:
        <<: *deploy_base
        file: dist/sessh-*.zip
        # travis-ci/dpl doesn't seem to work on Windows at the moment
        edge: false
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH
